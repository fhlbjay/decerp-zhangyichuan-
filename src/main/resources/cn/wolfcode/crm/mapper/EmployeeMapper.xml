<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.crm.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.Employee">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="realname" property="realname"/>
        <result column="password" property="password"/>
        <result column="tel" property="tel"/>
        <result column="email" property="email"/>
        <result column="inputtime" property="inputtime"/>
        <result column="state" property="state"/>
        <result column="admin" property="admin"/>
        <!--<association property="department" column="dept_id"
                     select="cn.wolfcode.crm.mapper.DepartmentMapper.selectByPrimaryKey"
        javaType="cn.wolfcode.crm.domain.Department"/>-->
        <association property="department" columnPrefix="d_" javaType="cn.wolfcode.crm.domain.Department">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>

    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM `employee`
        WHERE id = #{id}
    </delete>
    <delete id="deleteRelations">
        DELETE FROM employee_role
        WHERE employee_id = #{id}
    </delete>
    <insert id="insert" parameterType="cn.wolfcode.crm.domain.Employee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `employee` (username, realname, password, tel, email, inputtime, state,
                                admin, dept_id)
        VALUES (#{username}, #{realname}, #{password}, #{tel}, #{email}, #{inputtime}, #{state},
                #{admin}, #{department.id})
    </insert>
    <insert id="batchInsertRelations">
        INSERT employee_role (employee_id,role_id) VALUES
        <foreach collection="roles" separator="," item="role">
            (#{employeeId},#{role.id})
        </foreach>
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.wolfcode.crm.domain.Employee">
        UPDATE `employee`
        SET username  = #{username},
            realname  = #{realname},
            tel       = #{tel},
            email     = #{email},
            inputtime = #{inputtime},
            admin     = #{admin},
            dept_id   = #{department.id}
        WHERE id = #{id}
    </update>
    <update id="changeState">
        UPDATE employee
        SET state = state ^ 1
        WHERE id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
            id,
            username,
            realname,
            password,
            tel,
            email,
            inputtime,
            state,
            admin
        FROM `employee`
        WHERE id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            e.id,d.name d_name,d.id d_id,
            e.username,
            e.realname,
            e.password,
            e.tel,
            e.email,
            e.inputtime,
            e.state,
           e.admin
        FROM `employee` e LEFT  JOIN  department d
        ON d.id=e.dept_id
    </select>
    <sql id="baseSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and (e.username like concat("%",#{keyword},"%") or e.tel like concat("%",#{keyword},"%") )
            </if>
        </where>
    </sql>
    <select id="queryList" resultMap="BaseResultMap">
        SELECT
        e.id,d.name d_name,d.id d_id,
        e.username,
        e.realname,
        e.password,
        e.tel,
        e.email,
        e.inputtime,
        e.state,
        e.admin
        FROM `employee` e LEFT  JOIN  department d
        ON d.id=e.dept_id
        <include refid="baseSql"/>
        limit #{beginIndex},#{rows}
    </select>
    <select id="queryCount" resultType="java.lang.Integer">
        select count(e.id)
        from employee e
        <include refid="baseSql"/>
    </select>
    <select id="getRoleIdByemployeeId" resultType="java.lang.Long">
        SELECT id
        FROM role r
            LEFT JOIN employee_role er ON r.id = er.role_id
        WHERE er.employee_id = #{id}
    </select>
    <select id="getEmployeeByUsername" resultType="cn.wolfcode.crm.domain.Employee">
        SELECT
            id,
            username,
            realname,
            password,
            tel,
            email,
            inputtime,
            state,
            admin
        FROM `employee`
        WHERE username = #{principal}
    </select>
    <select id="selectUserName" resultType="java.lang.String">
        SELECT username
        FROM employee
        WHERE username=#{username}
    </select>
</mapper>