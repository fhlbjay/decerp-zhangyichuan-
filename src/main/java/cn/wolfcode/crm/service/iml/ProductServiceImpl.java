package cn.wolfcode.crm.service.iml;import cn.wolfcode.crm.domain.Product;import cn.wolfcode.crm.mapper.ProductMapper;import cn.wolfcode.crm.query.MyProductQueryObject;import cn.wolfcode.crm.query.PageResult;import cn.wolfcode.crm.service.IProductService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.math.BigDecimal;import java.util.Collections;import java.util.List;@Servicepublic class ProductServiceImpl implements IProductService {	@Autowired	private ProductMapper mapper;	@Override	public void deleteByPrimaryKey(Long id) {		mapper.deleteByPrimaryKey(id);	}	@Override	public void insert(Product record) {		mapper.insert(record);	}	@Override	public Product selectByPrimaryKey(Long id) {		return mapper.selectByPrimaryKey(id);	}	@Override	public List<Product> selectAll() {		return mapper.selectAll();	}	@Override	public void updateByPrimaryKey(Product record) {			mapper.updateByPrimaryKey(record);	}	@Override	public PageResult query(MyProductQueryObject qo) {		int count = mapper.queryCount(qo);		if (count==0){		    return new PageResult(count, Collections.EMPTY_LIST);		}		return new PageResult(count,mapper.queryList(qo));	}	@Override	public void changeState(Long id) {		mapper.changeState(id);	}	@Override	public String selectProductAmount() {		return mapper.selectProductAmount();	}	@Override	public int ProductAmount() {		return mapper.ProductAmount();	}	@Override	public BigDecimal sumAmount() {		List<Product> products = mapper.selectAll();		BigDecimal result=BigDecimal.ZERO;		for (Product product: products) {			if (product.getProductStock()!=null){			 result = result.add(product.getCostPrice().multiply(product.getProductStock().getStoreNumber()));			}		}		return result;	}}